# Generated by Django 4.1.5 on 2023-01-21 07:18

import autoslug.fields
import dirtyfields.dirtyfields
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import uuid
import versatileimagefield.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('client_app', '0001_initial'),
        ('admin_app', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='BaseProduct',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('name', models.CharField(max_length=255)),
                ('description', models.TextField(blank=True, null=True)),
                ('dosage_form', models.CharField(blank=True, max_length=255, null=True)),
                ('active_ingredient', models.ManyToManyField(related_name='get_ingredient_baseproducts', to='admin_app.ingredient')),
                ('brand', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_brand_baseproducts', to='admin_app.brand')),
                ('category', models.ManyToManyField(related_name='get_category_baseproducts', to='admin_app.category')),
                ('manufacturer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_manufacturer_baseproducts', to='admin_app.manufacturer')),
                ('medicine_physical_state', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_medicinephysicalstate_products', to='admin_app.medicinephysicalstate')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from='get_product_name', unique_with=['base_product__name'])),
                ('stock', models.PositiveIntegerField(default=0)),
                ('buying_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('selling_price', models.DecimalField(decimal_places=2, default=0, max_digits=10)),
                ('base_product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_baseproduct_products', to='product_app.baseproduct')),
                ('merchant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_merchant_products', to=settings.AUTH_USER_MODEL)),
                ('merchant_domain', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='get_tenant_products', to='client_app.tenant')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uuid', models.UUIDField(db_index=True, default=uuid.uuid4, editable=False, unique=True)),
                ('active', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
                ('image', versatileimagefield.fields.VersatileImageField(height_field='height', upload_to='', verbose_name='Image', width_field='width')),
                ('height', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image Height')),
                ('width', models.PositiveIntegerField(blank=True, null=True, verbose_name='Image Width')),
                ('ppoi', versatileimagefield.fields.PPOIField(default='0.5x0.5', editable=False, max_length=20, verbose_name='Image PPOI')),
                ('base_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_baseproduct_images', to='product_app.baseproduct')),
                ('product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='get_product_images', to='product_app.product')),
            ],
            options={
                'abstract': False,
            },
            bases=(dirtyfields.dirtyfields.DirtyFieldsMixin, models.Model),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='merchant_product',
            field=models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_base_product', to='product_app.product'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='route_of_administration',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_routeofadministration_products', to='admin_app.routeofadministration'),
        ),
        migrations.AddField(
            model_name='baseproduct',
            name='superadmin',
            field=models.ForeignKey(blank=True, limit_choices_to=models.Q(('admin', True), ('superuser', True), _connector='OR'), null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='get_admin_products', to=settings.AUTH_USER_MODEL),
        ),
    ]
